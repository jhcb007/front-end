// Generated from Compilador.g4 by ANTLR 4.7.2
// jshint ignore: start
var antlr4 = require('antlr4/index');



var serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964",
    "\u0002\nz\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003\u0004\u0004",
    "\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007\t\u0007",
    "\u0004\b\t\b\u0004\t\t\t\u0003\u0002\u0003\u0002\u0003\u0002\u0003\u0002",
    "\u0005\u0002\u0018\n\u0002\u0003\u0003\u0003\u0003\u0003\u0003\u0003",
    "\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003",
    "\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003",
    "\u0003\u0003\u0003\u0005\u0003+\n\u0003\u0003\u0004\u0003\u0004\u0003",
    "\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0003",
    "\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0003",
    "\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0003",
    "\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0003",
    "\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0003",
    "\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0003",
    "\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0005\u0004X",
    "\n\u0004\u0003\u0005\u0003\u0005\u0003\u0005\u0003\u0005\u0003\u0005",
    "\u0003\u0005\u0003\u0005\u0003\u0005\u0003\u0005\u0003\u0005\u0003\u0005",
    "\u0003\u0005\u0003\u0005\u0003\u0005\u0003\u0005\u0005\u0005i\n\u0005",
    "\u0003\u0006\u0003\u0006\u0003\u0007\u0006\u0007n\n\u0007\r\u0007\u000e",
    "\u0007o\u0003\b\u0006\bs\n\b\r\b\u000e\bt\u0003\t\u0003\t\u0003\t\u0003",
    "\t\u0002\u0002\n\u0003\u0003\u0005\u0004\u0007\u0005\t\u0006\u000b\u0007",
    "\r\b\u000f\t\u0011\n\u0003\u0002\u0005\u0004\u0002\f\f\u000f\u000f\u0004",
    "\u0002C\\c|\u0004\u0002\u000b\u000b\"\"\u0002\u0083\u0002\u0003\u0003",
    "\u0002\u0002\u0002\u0002\u0005\u0003\u0002\u0002\u0002\u0002\u0007\u0003",
    "\u0002\u0002\u0002\u0002\t\u0003\u0002\u0002\u0002\u0002\u000b\u0003",
    "\u0002\u0002\u0002\u0002\r\u0003\u0002\u0002\u0002\u0002\u000f\u0003",
    "\u0002\u0002\u0002\u0002\u0011\u0003\u0002\u0002\u0002\u0003\u0017\u0003",
    "\u0002\u0002\u0002\u0005*\u0003\u0002\u0002\u0002\u0007W\u0003\u0002",
    "\u0002\u0002\th\u0003\u0002\u0002\u0002\u000bj\u0003\u0002\u0002\u0002",
    "\rm\u0003\u0002\u0002\u0002\u000fr\u0003\u0002\u0002\u0002\u0011v\u0003",
    "\u0002\u0002\u0002\u0013\u0014\u0007q\u0002\u0002\u0014\u0018\u0007",
    "w\u0002\u0002\u0015\u0016\u0007Q\u0002\u0002\u0016\u0018\u0007W\u0002",
    "\u0002\u0017\u0013\u0003\u0002\u0002\u0002\u0017\u0015\u0003\u0002\u0002",
    "\u0002\u0018\u0004\u0003\u0002\u0002\u0002\u0019\u001a\u0007u\u0002",
    "\u0002\u001a+\u0007g\u0002\u0002\u001b\u001c\u0007u\u0002\u0002\u001c",
    "\u001d\u0007g\u0002\u0002\u001d\u001e\u0007\"\u0002\u0002\u001e\u001f",
    "\u0007g\u0002\u0002\u001f \u0007\"\u0002\u0002 !\u0007u\u0002\u0002",
    "!\"\u0007q\u0002\u0002\"#\u0007o\u0002\u0002#$\u0007g\u0002\u0002$%",
    "\u0007p\u0002\u0002%&\u0007v\u0002\u0002&\'\u0007g\u0002\u0002\'(\u0007",
    "\"\u0002\u0002()\u0007u\u0002\u0002)+\u0007g\u0002\u0002*\u0019\u0003",
    "\u0002\u0002\u0002*\u001b\u0003\u0002\u0002\u0002+\u0006\u0003\u0002",
    "\u0002\u0002,-\u0007r\u0002\u0002-.\u0007q\u0002\u0002./\u0007t\u0002",
    "\u0002/0\u0007v\u0002\u000201\u0007c\u0002\u000212\u0007p\u0002\u0002",
    "23\u0007v\u0002\u00023X\u0007q\u0002\u000245\u0007c\u0002\u000256\u0007",
    "u\u0002\u000267\u0007u\u0002\u000278\u0007k\u0002\u00028X\u0007o\u0002",
    "\u00029:\u0007n\u0002\u0002:;\u0007q\u0002\u0002;<\u0007i\u0002\u0002",
    "<X\u0007q\u0002\u0002=>\u0007g\u0002\u0002>?\u0007p\u0002\u0002?@\u0007",
    "v\u0002\u0002@A\u0007c\u0002\u0002AX\u0007q\u0002\u0002BC\u0007p\u0002",
    "\u0002CD\u0007g\u0002\u0002DE\u0007u\u0002\u0002EF\u0007v\u0002\u0002",
    "FG\u0007g\u0002\u0002GH\u0007\"\u0002\u0002HI\u0007e\u0002\u0002IJ\u0007",
    "c\u0002\u0002JK\u0007u\u0002\u0002KX\u0007q\u0002\u0002LM\u0007c\u0002",
    "\u0002MN\u0007u\u0002\u0002NO\u0007u\u0002\u0002OP\u0007k\u0002\u0002",
    "PQ\u0007o\u0002\u0002QR\u0007\"\u0002\u0002RS\u0007u\u0002\u0002ST\u0007",
    "g\u0002\u0002TU\u0007p\u0002\u0002UV\u0007f\u0002\u0002VX\u0007q\u0002",
    "\u0002W,\u0003\u0002\u0002\u0002W4\u0003\u0002\u0002\u0002W9\u0003\u0002",
    "\u0002\u0002W=\u0003\u0002\u0002\u0002WB\u0003\u0002\u0002\u0002WL\u0003",
    "\u0002\u0002\u0002X\b\u0003\u0002\u0002\u0002YZ\u0007p\u0002\u0002Z",
    "[\u0007c\u0002\u0002[i\u0007q\u0002\u0002\\]\u0007o\u0002\u0002]^\u0007",
    "c\u0002\u0002^_\u0007u\u0002\u0002_`\u0007\"\u0002\u0002`a\u0007p\u0002",
    "\u0002ab\u0007c\u0002\u0002bc\u0007q\u0002\u0002cd\u0007\"\u0002\u0002",
    "de\u0007g\u0002\u0002ef\u0007u\u0002\u0002fg\u0007v\u0002\u0002gi\u0007",
    "c\u0002\u0002hY\u0003\u0002\u0002\u0002h\\\u0003\u0002\u0002\u0002i",
    "\n\u0003\u0002\u0002\u0002jk\u0007g\u0002\u0002k\f\u0003\u0002\u0002",
    "\u0002ln\t\u0002\u0002\u0002ml\u0003\u0002\u0002\u0002no\u0003\u0002",
    "\u0002\u0002om\u0003\u0002\u0002\u0002op\u0003\u0002\u0002\u0002p\u000e",
    "\u0003\u0002\u0002\u0002qs\t\u0003\u0002\u0002rq\u0003\u0002\u0002\u0002",
    "st\u0003\u0002\u0002\u0002tr\u0003\u0002\u0002\u0002tu\u0003\u0002\u0002",
    "\u0002u\u0010\u0003\u0002\u0002\u0002vw\t\u0004\u0002\u0002wx\u0003",
    "\u0002\u0002\u0002xy\b\t\u0002\u0002y\u0012\u0003\u0002\u0002\u0002",
    "\t\u0002\u0017*Whot\u0003\b\u0002\u0002"].join("");


var atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

var decisionsToDFA = atn.decisionToState.map( function(ds, index) { return new antlr4.dfa.DFA(ds, index); });

function CompiladorLexer(input) {
	antlr4.Lexer.call(this, input);
    this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    return this;
}

CompiladorLexer.prototype = Object.create(antlr4.Lexer.prototype);
CompiladorLexer.prototype.constructor = CompiladorLexer;

Object.defineProperty(CompiladorLexer.prototype, "atn", {
        get : function() {
                return atn;
        }
});

CompiladorLexer.EOF = antlr4.Token.EOF;
CompiladorLexer.OP = 1;
CompiladorLexer.COND = 2;
CompiladorLexer.CONC = 3;
CompiladorLexer.NEG = 4;
CompiladorLexer.CONJ = 5;
CompiladorLexer.NEWLINE = 6;
CompiladorLexer.WORD = 7;
CompiladorLexer.WHITESPACE = 8;

CompiladorLexer.prototype.channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];

CompiladorLexer.prototype.modeNames = [ "DEFAULT_MODE" ];

CompiladorLexer.prototype.literalNames = [  ];

CompiladorLexer.prototype.symbolicNames = [ null, "OP", "COND", "CONC", 
                                            "NEG", "CONJ", "NEWLINE", "WORD", 
                                            "WHITESPACE" ];

CompiladorLexer.prototype.ruleNames = [ "OP", "COND", "CONC", "NEG", "CONJ", 
                                        "NEWLINE", "WORD", "WHITESPACE" ];

CompiladorLexer.prototype.grammarFileName = "Compilador.g4";



exports.CompiladorLexer = CompiladorLexer;

